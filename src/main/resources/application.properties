
spring.datasource.driver-class-name=org.postgresql.Driver
#local start
#spring.datasource.url=jdbc:postgresql://localhost:5432/zskhelper_db
#start from docker
spring.datasource.url=jdbc:postgresql://postgres:5432/zskhelper_db
spring.datasource.username=postgres
spring.datasource.password=postgres
# ???????????? ?????? Hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql=true
#`??? ??? ?????? http ???????
spring.mvc.hiddenmethod.filter.enabled=true
#`??? ??? ?????? http ???????
server.port=8084
bot.name=zsk_helper_bot
bot.token=6571946737:AAH7G1OtcJE-PDp6Ezo6Qbi_I4nn7UueMCY
bot.chatId=1

#local start
#spring.kafka.bootstrap-servers=localhost:9092
#start from docker
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer:org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer 
spring.kafka.template.default-topic=telegramBotTopic

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

#for create database and tables
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
spring.liquibase.default-schema=public

